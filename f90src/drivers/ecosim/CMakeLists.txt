set(ECOSIM_DRIVER_SOURCES
  EcoSIMAPI.F90
  ecosim.F90
)

include_directories(${ECOSIM_INCLUDE_DIRS})
include_directories(${CMAKE_BINARY_DIR}/f90src/utils/)
include_directories(${CMAKE_BINARY_DIR}/f90src/minimath/)
include_directories(${CMAKE_BINARY_DIR}/f90src/modelconfig/)
include_directories(${CMAKE_BINARY_DIR}/f90src/mesh/)
include_directories(${CMAKE_BINARY_DIR}/f90src/ecosim_datatype/)
include_directories(${CMAKE_BINARY_DIR}/f90src/ioutils/)
include_directories(${CMAKE_BINARY_DIR}/f90src/microbial_bgc/)
include_directories(${CMAKE_BINARY_DIR}/f90src/HydroTherm/SoilPhys)
include_directories(${CMAKE_BINARY_DIR}/f90src/HydroTherm/SnowPhys)
include_directories(${CMAKE_BINARY_DIR}/f90src/plant_bgc/)
include_directories(${CMAKE_BINARY_DIR}/f90src/geochem/layers_chem)
include_directories(${CMAKE_BINARY_DIR}/f90src/disturbances/)
include_directories(${CMAKE_BINARY_DIR}/f90src/modelforc/)
include_directories(${CMAKE_BINARY_DIR}/f90src/ecosim_mods/)
include_directories(${CMAKE_BINARY_DIR}/f90src/transport/nonsalt)
include_directories(${CMAKE_BINARY_DIR}/f90src/transport/salt)
include_directories(${CMAKE_BINARY_DIR}/f90src/balances/)
include_directories(${CMAKE_BINARY_DIR}/f90src/APIs/)
include_directories(${CMAKE_BINARY_DIR}/f90src/main/)


#add_ecosim_library(ecosim_driver ${ECOSIM_DRIVER_SOURCES})

#set(ECOSIM_LIBRARIES ecosim_driver;${ECOSIM_LIBRARIES} PARENT_SCOPE)

#target_link_libraries(${ECOSIM_LIBRARIES};${ECOSIM_TPLS})
message("ECOSIM_LIBRARIES: ${ECOSIM_LIBRARIES}")
message("ECOSIM_TPLS: ${ECOSIM_TPLS}")

#include(add_ecosim_library)
#add_ecosim_library(ecosiml ${ECOSIM_LIBRARIES})
if (BUILD_SHARED_LIBS)
else()
  message("ECOSIM_LIBRARIES: ${ECOSIM_LIBRARIES}")
  add_library(ecosiml INTERFACE)
  foreach(lib  ${ECOSIM_LIBRARIES})
    message("lib: ${lib}")
    target_link_libraries(ecosiml INTERFACE ${lib})
  endforeach()
endif()

include(add_ecosim_executable)
add_ecosim_executable(ecosim.f90.x  ${ECOSIM_DRIVER_SOURCES})

if (NOT CMAKE_INSTALL_PREFIX STREQUAL "INSTALL_DISABLED")
  install(TARGETS ecosim.f90.x DESTINATION bin)
  if (BUILD_SHARED_LIBS)
    install(TARGETS ecosiml LIBRARY DESTINATION lib/)
  else()
    message("install ecosiml")
    install(TARGETS ecosiml EXPORT ecosimlTargets)
  endif()
  file(GLOB HEADERS *.mod)
  install(FILES ${HEADERS} DESTINATION include/)
endif()
